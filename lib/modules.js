'use babel';
export default [
    'AddFileDependencies',
    'BundleUtilities',
    'CMakeAddFortranSubdirectory',
    'CMakeBackwardCompatibilityCXX',
    'CMakeDependentOption',
    'CMakeDetermineVSServicePack',
    'CMakeExpandImportedTargets',
    'CMakeFindDependencyMacro',
    'CMakeFindFrameworks',
    'CMakeFindPackageMode',
    'CMakeForceCompiler',
    'CMakeGraphVizOptions',
    'CMakePackageConfigHelpers',
    'CMakeParseArguments',
    'CMakePrintHelpers',
    'CMakePrintSystemInformation',
    'CMakePushCheckState',
    'CMakeVerifyManifest',
    'CPack',
    'CPackBundle',
    'CPackComponent',
    'CPackCygwin',
    'CPackDMG',
    'CPackDeb',
    'CPackIFW',
    'CPackNSIS',
    'CPackPackageMaker',
    'CPackRPM',
    'CPackWIX',
    'CTest',
    'CTestCoverageCollectGCOV',
    'CTestScriptMode',
    'CTestUseLaunchers',
    'CheckCCompilerFlag',
    'CheckCSourceCompiles',
    'CheckCSourceRuns',
    'CheckCXXCompilerFlag',
    'CheckCXXSourceCompiles',
    'CheckCXXSourceRuns',
    'CheckCXXSymbolExists',
    'CheckFortranCompilerFlag',
    'CheckFortranFunctionExists',
    'CheckFortranSourceCompiles',
    'CheckFunctionExists',
    'CheckIncludeFile',
    'CheckIncludeFileCXX',
    'CheckIncludeFiles',
    'CheckLanguage',
    'CheckLibraryExists',
    'CheckPrototypeDefinition',
    'CheckStructHasMember',
    'CheckSymbolExists',
    'CheckTypeSize',
    'CheckVariableExists',
    'Dart',
    'DeployQt4',
    'Documentation',
    'ExternalData',
    'ExternalProject',
    'FeatureSummary',
    'FortranCInterface',
    'GNUInstallDirs',
    'GenerateExportHeader',
    'GetPrerequisites',
    'InstallRequiredSystemLibraries',
    'MacroAddFileDependencies',
    'ProcessorCount',
    'SelectLibraryConfigurations',
    'SquishTestScript',
    'TestBigEndian',
    'TestCXXAcceptsFlag',
    'TestForANSIForScope',
    'TestForANSIStreamHeaders',
    'TestForSSTREAM',
    'TestForSTDNamespace',
    'UseEcos',
    'UseJava',
    'UseJavaClassFilelist',
    'UseJavaSymlinks',
    'UsePkgConfig',
    'UseSWIG',
    'Use_wxWindows',
    'UsewxWidgets',
    'WriteBasicConfigVersionFile',
    'WriteCompilerDetectionHeader'
];
